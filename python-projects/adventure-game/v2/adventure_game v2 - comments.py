"""
Original idea started by FreeCodeCamp.
This version was developed by Helen Yates
Copyright 2020
"""

#Python functions

import random
import time

#User-created functions

from ranks import *
from start_info import *
from invalid_choices import *
from journey import *

#Time pause so text won't be flooded instantly on screen. Lines will appear at a speed so it is more readable.

ts750ms = 750/1000 #750 milliseconds
ts1s = 1 #1 second

#Choose a name - from several options.

print("Welcome to this adventure game")
time.sleep(ts750ms)
print("First, you need to choose your name.")
time.sleep(ts750ms)
print("Would you like to:\n A - Write your own name? \n B - Have a name generated by the game?")
time.sleep(ts750ms)
ans = input("Choose A or B\n").lower()
time.sleep(ts750ms)
if ans != "a" and ans != "b": 
    ans = invalid_ab(ans)

#Name Option 01: - User creating their own name

if ans == "a":
    name = input("What is your name? \n").title()
    time.sleep(ts750ms)

# Name Option 02: - User name being auto-generated by the game.

elif ans == "b":
    ans = input("Would you like a (M)ale or a (F)emale name?\n")
    time.sleep(ts750ms)
    if ans != "m" and ans != "male" and ans != "f" and ans != "female": 
        ans = invalid_mf(ans)
    if ans == "m" or ans == "male":
        name = random_name(ans)
        time.sleep(ts750ms)
    elif ans == "f" or ans == "female":
        name = random_name(ans)
        time.sleep(ts750ms)

# Choose a rank - from several options.

print("Welcome aboard " + name + ". Now you need to choose a rank.")
time.sleep(ts750ms)
print("Here are your choices.\n")
time.sleep(ts750ms)
print(*rankList, sep=" / " )
time.sleep(ts750ms)
print(
    "\nWould you like to: \n A - Know about each rank before you choose or \n B - Choose a rank?\n C - Have a rank "
    "generated by the game?")
time.sleep(ts750ms)
ans = input("Choose A, B or C\n").lower()
if ans != "a" and ans != "b" and ans != "c":
    ans = invalid_abc(ans)
time.sleep(ts750ms)

#Rank Option 01a: - User finding out ranks before choosinga

if ans == "a":
    print("Would you like to:\n A - Find out about all the ranks at once \n B - Find out about a specific rank?")
    time.sleep(ts750ms)
    ans = input("Choose A or B\n").lower()
    time.sleep(ts750ms)
    if ans != "a" and ans != "b":
        ans = invalid_ab(ans)

# Rank Option 01a-01a: - Prints out all ranks and descriptions at once before inputting rank manually

    if ans == "a":
        for key, value in rankBook.items():
            print(f"{key}: {value}")
        rank = input("Pick a rank: \n").title()
        rank = rankCheck(rank)
        rankFinal = rankDeclare(rank)

# Rank Option 01a-01b: - Choosing a rank to look at before deciding

    elif ans == "b":
        rank = input("Choose a rank:\n").title()
        rank = rankCheck(rank)
        rankSentence = rankDeclare(rank)
        time.sleep(ts750ms)
        print(rankSentence)
        time.sleep(ts750ms)

# Rank Option 01a-01b-01: - Choosing to input a rank or see info of another rank?

        print("Would you like to:\n A - Choose a rank\n B - See the info of another rank?")
        time.sleep(ts750ms)
        ans = input("Choose A or B\n").lower()
        if ans != "a" and ans != "b":
            ans = invalid_ab(ans)

# Rank Option 01b-01b-01a: - Inputting a rank

        elif ans == "a":
            rank = input("Pick a rank: \n").title()
            rank = rankCheck(rank)
            rankFinal = rankDeclare(rank)


# Rank Option 01b-01b-01b: - Choosing another rank to look at

        elif ans == "b":
            rank = input("Choose another rank:\n").title()
            rank = rankCheck(rank)
            rankSentence = rankDeclare(rank)
            print(rankSentence)
            time.sleep(ts750ms)

# Rank Option 01b-01b-01b-01: - Option to choose another

            print("Would you like to choose another?")
            time.sleep(ts750ms)
            ans = input("Choose (Y)es or (N)o?\n").lower()
            time.sleep(ts750ms)
            if ans != "y" and ans != "yes" and ans != "n" and ans != "no":
                ans = invalid_yn(ans)

# Rank Option 01b-01b-01b-01a: - Function inducting a while loop so player can check rank info infinitely.

            elif ans == "y" or ans == "yes":
                rank = rankListCheck(ans)
                rankFinal = rankDeclare(rank)

# Rank Option 01b-01b-01b-01b: - User inputting a rank

            elif ans == "n" or ans == "no":
                rank = input("Pick a rank: \n").title()
                rank = rankCheck(rank)
                rankFinal = rankDeclare(rank)

#Rank Option 01b: - User inputting a rank

elif ans == "b":
    rank = input("Pick a rank: \n").title()
    rank = rankCheck(rank)
    rankFinal = rankDeclare(rank)

#Rank Option 01c: - Autogenerate a rank

elif ans == "c":
    rank = random.choice(rankList)
    rankFinal = rankDeclare(rank)


#Welcome sentence - varies depends on rank

welcomeSentence = welcome_sentence(name, rank)
print(welcomeSentence)
time.sleep(ts750ms)
print("Now let's begin.")
time.sleep(ts750ms)
print("You have",health,"health.")
time.sleep(ts750ms)

#Start of game sentence - how the game starts depending on rank.

startSentence = start_sentence(rank)
print(startSentence)
